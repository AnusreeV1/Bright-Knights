{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nrish\\\\Rishi\\\\Projects\\\\Chess\\\\Test\\\\daisyui-admin-dashboard-template-master\\\\src\\\\features\\\\documentation\\\\components\\\\FeaturesContent.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Subtitle from '../../../components/Typography/Subtitle';\nimport { setPageTitle, showNotification } from '../../common/headerSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FeaturesContent() {\n  _s();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"prose\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature1\",\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"JWT based Authentication logic is present in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/app/auth.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 65\n        }, this), \". In the file you can see we are adding bearer token in header for every request. Every routes under \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/routes/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 231\n        }, this), \" folder will need authentication. For public routes like login, register you will have to add routes in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 396\n        }, this), \" file and also include the path in PUBLIC_ROUTES variable under \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/app/auth.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 519\n        }, this), \" file so that auto redirect to login page is not triggered.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature2\",\n        children: \"Left Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This is main internal navigation (for pages that will come after login only), all sidebar menu items with their icons are present in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/routes/sidebar.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 156\n        }, this), \"  file, while  path and page components mapping are respectively present in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/routes/index.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 303\n        }, this), \" file.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature3\",\n        children: \"Add New Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"All \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"public routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this), \" are present in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 92\n        }, this), \" file. Steps to add new public page -\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Create Page inside \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"/pages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 48\n          }, this), \" folder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Go to \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }, this), \" and import the component and add its path\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Add your new route path in \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"/app/auth.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 56\n          }, this), \" file under PUBLIC_ROUTES variable, this will allow the page to open without login.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: [\"All \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"protected routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }, this), \" are present in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"/routes/sidebar.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 112\n        }, this), \" file\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Create your page inside \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"/pages/protected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 53\n          }, this), \" folder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Add your new routes in \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"/routes/sidebar.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 52\n          }, this), \", this will show your new page in sidebar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Import your new routes component and map its path in \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge mt-0 mb-0 badge-ghost\",\n            children: \"/routes/index.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature4\",\n        children: \"Right Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"This is used for showing long list contents like notifications, settings etc.. We are using redux to show and hide and it is single component and can be called from any file with dispatch method. To add new content follow following steps:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Create new component file containing main body of your content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Create new variable in \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"/utils/globalConstantUtils.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 54\n            }, this), \" file under RIGHT_DRAWER_TYPES variable\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Now include the file mapped with the new variable in \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"/containers/RightSidebar.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 84\n            }, this), \" file using switch. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 184\n            }, this), \"For ex- If you new component name is \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"TestRightSideBar.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 65\n            }, this), \" and  variable name is TEST_RIGHT_SIDEBAR, then add following code inside switch code block\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mockup-code mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"my-0 py-0\",\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: `[RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR] : \\n<TestRightSideBar {...extraObject} closeRightDrawer={close}/>`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm mt-1 italic\",\n              children: \"Here extraObject have variables that is passed from parent component while calling openRightDrawer method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Now the last step, call dispatch method as follows\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mockup-code mt-1\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"my-0 py-0\",\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: 'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(openRightDrawer({header : \"Test Right Drawer\", \\n  bodyType : RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR}))'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature5\",\n        children: \"Themes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"By default we have added light and dark theme and Daisy UI comes with a number of themes, which you can use with no extra effort, you just have to include it in \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge mt-0 mb-0 badge-ghost\",\n          children: \"tailwind.config.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 178\n        }, this), \" file,  you can add themes like cupcake, corporate, reto etc... Also we can configure themes colors in config file, for more documentation on themes checkout \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://daisyui.com/docs/themes/\",\n          target: \"_blank\",\n          children: \"Daisy UI documentation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 407\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature6\",\n        children: \"Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"With global modal functionality you dont have to create seperate modal for each page. We are using redux to show and hide and it is a single component and can be called from any file with dispatch method. Code for showing modal is present in modalSlice and layout container component. To show modal just call openModal() function of modalSlice using dispatch.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), \"To add new modal in any page follow following steps:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Create new component file containing main body of your modal content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Create new variable in \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"/utils/globalConstantUtils.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 54\n            }, this), \" file under MODAL_BODY_TYPES variable\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Now include the file mapped with the new variable in \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"/containers/ModalLayout.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 84\n            }, this), \" file using switch. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 183\n            }, this), \"For ex- If you new component name is \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge mt-0 mb-0 badge-ghost\",\n              children: \"TestModal.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 65\n            }, this), \" and  variable name is TEST_MODAL, then add following code inside switch code block\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mockup-code mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"my-0 py-0\",\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: `[RIGHT_DRAWER_TYPES.TEST_MODAL] : \\n<TestModal closeModal={close} extraObject={extraObject}/>`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm mt-1 italic\",\n              children: \"Here extraObject have variables that is passed from parent component while calling openModal method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Now the last step, call dispatch method as follows\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mockup-code mt-1\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"my-0 py-0\",\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: 'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n   dispatch(openModal({title : \"Test Modal Title\", \\n   bodyType : MODAL_BODY_TYPES.TEST_MODAL}))'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feature7\",\n        children: \"Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Many times we have to show notification to user be it on successfull form submission or any api success. And requirement can come to show notification from any page, so global notification handling is needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: [\"Code for showing notification is present in headerSlice and layout container component. To show notification just call \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-ghost\",\n          children: \"showNotification()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 160\n        }, this), \" function of headerSlice using dispatch. To show success message notification pass status as 1 and for showing error message pass status as 0.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mockup-code mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"my-0 py-0\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: 'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(showNotification({message : \"Message here\", status : 1}))'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on this button to check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => dispatch(showNotification({\n          message: \"Your message has been sent!\",\n          status: 1\n        })),\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-error ml-4\",\n        onClick: () => dispatch(showNotification({\n          message: \"Something went wrong!\",\n          status: 0\n        })),\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(FeaturesContent, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = FeaturesContent;\nexport default FeaturesContent;\nvar _c;\n$RefreshReg$(_c, \"FeaturesContent\");","map":{"version":3,"names":["useEffect","useDispatch","Subtitle","setPageTitle","showNotification","FeaturesContent","dispatch","message","status"],"sources":["C:/Users/nrish/Rishi/Projects/Chess/Test/daisyui-admin-dashboard-template-master/src/features/documentation/components/FeaturesContent.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Subtitle from '../../../components/Typography/Subtitle'\nimport { setPageTitle, showNotification } from '../../common/headerSlice'\n\nfunction FeaturesContent(){\n\n    const dispatch = useDispatch()\n\n    return(\n        <>\n            <article className=\"prose\">\n              <h1 className=\"\">Features</h1>\n\n\n\n                {/* Authentication*/}\n              <h2 id=\"feature1\">Authentication</h2>\n                <p>\n                   JWT based Authentication logic is present in <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span>. In the file you can see we are adding bearer token in header for every request. Every routes under <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/</span> folder will need authentication. For public routes like login, register you will have to add routes in <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> file and also include the path in PUBLIC_ROUTES variable under <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span> file so that auto redirect to login page is not triggered.\n                   \n                </p>\n\n\n\n\n                   {/* Left Sidebar*/}\n              <h2 id=\"feature2\">Left Sidebar</h2>\n                  <p>\n                      This is main internal navigation (for pages that will come after login only), all sidebar menu items with their icons are present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span>  file, while  path and page components mapping are respectively present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/index.js</span> file.\n                    </p>\n\n\n\n                {/* Add New Page*/}\n            <h2 id=\"feature3\">Add New Page</h2>\n                <p>All <span className='font-semibold'>public routes</span> are present in <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> file. Steps to add new public page - \n                </p>\n\n                <ul className='mt-0'>\n                        <li>Create Page inside <span className=\"badge mt-0 mb-0 badge-ghost\">/pages</span> folder</li>\n                        <li>Go to <span className=\"badge mt-0 mb-0 badge-ghost\">App.js</span> and import the component and add its path</li>\n                        <li>Add your new route path in <span className=\"badge mt-0 mb-0 badge-ghost\">/app/auth.js</span> file under PUBLIC_ROUTES variable, this will allow the page to open without login.</li>\n                </ul>\n\n                <p className='mt-4'>All <span className='font-semibold'>protected routes</span> are present in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span> file</p>\n\n                <ul className='mt-0'>\n                        <li>Create your page inside <span className=\"badge mt-0 mb-0 badge-ghost\">/pages/protected</span> folder</li>\n                        <li>Add your new routes in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/sidebar.js</span>, this will show your new page in sidebar</li>\n                        <li>Import your new routes component and map its path in <span className=\"badge mt-0 mb-0 badge-ghost\">/routes/index.js</span></li>\n                 </ul>\n\n\n\n              {/* Right Sidebar*/}\n              <h2 id=\"feature4\">Right Sidebar</h2>\n                    <div>\n                        This is used for showing long list contents like notifications, settings etc.. We are using redux to show and hide and it is single component and can be called from any file with dispatch method.\n                        To add new content follow following steps:\n                        <ul>\n                          <li>Create new component file containing main body of your content</li>\n                          <li>Create new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/utils/globalConstantUtils.js</span> file under RIGHT_DRAWER_TYPES variable</li>\n                          <li>Now include the file mapped with the new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/containers/RightSidebar.js</span> file using switch. <br />\n                           For ex- If you new component name is <span className=\"badge mt-0 mb-0 badge-ghost\">TestRightSideBar.js</span> and  variable name is TEST_RIGHT_SIDEBAR, then add following code inside switch code block\n                          <br />\n                          <div className=\"mockup-code mt-4\">\n                                <pre className='my-0 py-0'><code>{`[RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR] : \\n<TestRightSideBar {...extraObject} closeRightDrawer={close}/>`}</code></pre>\n                          </div>\n                          <span className='text-sm mt-1 italic'>Here extraObject have variables that is passed from parent component while calling openRightDrawer method</span>\n                          </li>\n                          <li>Now the last step, call dispatch method as follows\n                          <div className=\"mockup-code mt-1\">\n                                <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(openRightDrawer({header : \"Test Right Drawer\", \\n  bodyType : RIGHT_DRAWER_TYPES.TEST_RIGHT_SIDEBAR}))'}</code></pre>\n                          </div> \n                          </li>\n                        </ul>\n                    </div>\n\n\n                    {/* Themes*/}\n              <h2 id=\"feature5\">Themes</h2>\n                <p>\n                By default we have added light and dark theme and Daisy UI comes with a number of themes, which you can use with no extra effort, you just have to include it in <span className=\"badge mt-0 mb-0 badge-ghost\">tailwind.config.js</span> file,  you can add themes like cupcake, corporate, reto etc... Also we can configure themes colors in config file, for more documentation on themes checkout <a href=\"https://daisyui.com/docs/themes/\" target=\"_blank\">Daisy UI documentation.</a>\n                </p>\n\n\n\n\n                    {/* Modal*/}\n              <h2 id=\"feature6\">Modal</h2>\n                  <div>\n                        With global modal functionality you dont have to create seperate modal for each page. We are using redux to show and hide and it is a single component and can be called from any file with dispatch method.\n                        Code for showing modal is present in modalSlice and layout container component. To show modal just call openModal() function of modalSlice using dispatch.\n                        <br />\n                        To add new modal in any page follow following steps:\n                        <ul>\n                          <li>Create new component file containing main body of your modal content</li>\n                          <li>Create new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/utils/globalConstantUtils.js</span> file under MODAL_BODY_TYPES variable</li>\n                          <li>Now include the file mapped with the new variable in <span className=\"badge mt-0 mb-0 badge-ghost\">/containers/ModalLayout.js</span> file using switch. <br />\n                           For ex- If you new component name is <span className=\"badge mt-0 mb-0 badge-ghost\">TestModal.js</span> and  variable name is TEST_MODAL, then add following code inside switch code block\n                          <br />\n                          <div className=\"mockup-code mt-4\">\n                                <pre className='my-0 py-0'><code>{`[RIGHT_DRAWER_TYPES.TEST_MODAL] : \\n<TestModal closeModal={close} extraObject={extraObject}/>`}</code></pre>\n                          </div>\n                          <span className='text-sm mt-1 italic'>Here extraObject have variables that is passed from parent component while calling openModal method</span>\n                          </li>\n                          <li>Now the last step, call dispatch method as follows\n                          <div className=\"mockup-code mt-1\">\n                                <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n   dispatch(openModal({title : \"Test Modal Title\", \\n   bodyType : MODAL_BODY_TYPES.TEST_MODAL}))'}</code></pre>\n                          </div> \n                          </li>\n                        </ul>\n                    </div>\n\n\n\n\n                 \n\n\n                  {/* Notification*/}\n                  <h2 id=\"feature7\">Notification</h2>\n                  <p>Many times we have to show notification to user be it on successfull form submission or any api success. And requirement can come to show notification from any page, so global notification handling is needed.</p>\n\n                    <p className='mt-4'>Code for showing notification is present in headerSlice and layout container component. To show notification just call <span className='badge badge-ghost'>showNotification()</span> function of headerSlice using dispatch. To show success message notification pass status as 1 and for showing error message pass status as 0.</p> \n\n                    <div className=\"mockup-code mb-4\">\n                          <pre className='my-0 py-0'><code>{'import { useDispatch } from \"react-redux\"\\n  const dispatch = useDispatch()\\n  dispatch(showNotification({message : \"Message here\", status : 1}))'}</code></pre>\n                    </div> \n\n                    <p>Click on this button to check</p>\n\n                    <button className='btn btn-success' onClick={() => dispatch(showNotification({message : \"Your message has been sent!\", status : 1}))}>Success</button>\n\n                    <button className='btn btn-error ml-4' onClick={() => dispatch(showNotification({message : \"Something went wrong!\", status : 0}))}>Error</button>\n\n\n                    <div className='h-24'></div>\n\n\n            </article>\n        </>\n    )\n}\n\nexport default FeaturesContent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}