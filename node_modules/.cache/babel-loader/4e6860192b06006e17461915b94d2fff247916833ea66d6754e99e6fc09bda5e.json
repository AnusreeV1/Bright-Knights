{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nrish\\\\Rishi\\\\Projects\\\\Chess\\\\Test\\\\daisyui-admin-dashboard-template-master\\\\src\\\\features\\\\charts\\\\components\\\\StackBarChart.js\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport TitleCard from '../../../components/Cards/TitleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction StackBarChart() {\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Store 1',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(255, 99, 132, 1)'\n    }, {\n      label: 'Store 2',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(53, 162, 235, 1)'\n    }, {\n      label: 'Store 3',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(235, 162, 235, 1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(TitleCard, {\n    title: \"Sales\",\n    topMargin: \"mt-2\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_c = StackBarChart;\nexport default StackBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackBarChart\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","TitleCard","register","StackBarChart","options","responsive","scales","x","stacked","y","labels","data","datasets","label","map","Math","random","backgroundColor"],"sources":["C:/Users/nrish/Rishi/Projects/Chess/Test/daisyui-admin-dashboard-template-master/src/features/charts/components/StackBarChart.js"],"sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n  import { Bar } from 'react-chartjs-2';\n  import TitleCard from '../../../components/Cards/TitleCard';\n  \n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  \n  function StackBarChart(){\n  \n      const options = {\n            responsive: true,\n            scales: {\n                x: {\n                    stacked: true,\n                },\n                y: {\n                    stacked: true,\n                },\n            },\n        };\n        \n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n        \n        const data = {\n          labels,\n          datasets: [\n            {\n              label: 'Store 1',\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\n              backgroundColor: 'rgba(255, 99, 132, 1)',\n            },\n            {\n              label: 'Store 2',\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\n              backgroundColor: 'rgba(53, 162, 235, 1)',\n            },\n            {\n                label: 'Store 3',\n                data: labels.map(() => { return Math.random() * 1000 + 500 }),\n                backgroundColor: 'rgba(235, 162, 235, 1)',\n              },\n          ],\n        };\n  \n      return(\n        <TitleCard title={\"Sales\"} topMargin=\"mt-2\">\n              <Bar options={options} data={data} />\n        </TitleCard>\n  \n      )\n  }\n  \n  \n  export default StackBarChart"],"mappings":";AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,SAAS,MAAM,qCAAqC;AAAC;AAE5DR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,SAASI,aAAa,GAAE;EAEpB,MAAMC,OAAO,GAAG;IACVC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EAED,MAAME,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAE/E,MAAMC,IAAI,GAAG;IACXD,MAAM;IACNE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC,EACD;MACEJ,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC,EACD;MACIJ,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC;EAEP,CAAC;EAEH,oBACE,QAAC,SAAS;IAAC,KAAK,EAAE,OAAQ;IAAC,SAAS,EAAC,MAAM;IAAA,uBACrC,QAAC,GAAG;MAAC,OAAO,EAAEb,OAAQ;MAAC,IAAI,EAAEO;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/B;AAGlB;AAAC,KA3CQR,aAAa;AA8CtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}