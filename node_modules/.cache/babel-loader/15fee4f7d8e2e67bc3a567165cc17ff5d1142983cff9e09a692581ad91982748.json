{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nrish\\\\Rishi\\\\Projects\\\\Chess\\\\Test\\\\daisyui-admin-dashboard-template-master\\\\src\\\\features\\\\calendar\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport CalendarView from '../../components/CalendarView';\nimport moment from 'moment';\nimport { CALENDAR_INITIAL_EVENTS } from '../../utils/dummyData';\nimport { useDispatch } from 'react-redux';\nimport { openRightDrawer } from '../common/rightDrawerSlice';\nimport { RIGHT_DRAWER_TYPES } from '../../utils/globalConstantUtil';\nimport { showNotification } from '../common/headerSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_EVENTS = CALENDAR_INITIAL_EVENTS;\nfunction Calendar() {\n  _s();\n  const dispatch = useDispatch();\n  const [events, setEvents] = useState(INITIAL_EVENTS);\n\n  // Add your own Add Event handler, like opening modal or random event addition\n  // Format - {title :\"\", theme: \"\", startTime : \"\", endTime : \"\"}, typescript version comming soon :)\n  const addNewEvent = date => {\n    let randomEvent = INITIAL_EVENTS[Math.floor(Math.random() * 10)];\n    let newEventObj = {\n      title: randomEvent.title,\n      theme: randomEvent.theme,\n      startTime: moment(date).startOf('day'),\n      endTime: moment(date).endOf('day')\n    };\n    setEvents([...events, newEventObj]);\n    dispatch(showNotification({\n      message: \"New Event Added!\",\n      status: 1\n    }));\n  };\n\n  // Open all events of current day in sidebar \n  const openDayDetail = _ref => {\n    let {\n      filteredEvents,\n      title\n    } = _ref;\n    dispatch(openRightDrawer({\n      header: title,\n      bodyType: RIGHT_DRAWER_TYPES.CALENDAR_EVENTS,\n      extraObject: {\n        filteredEvents\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CalendarView, {\n      calendarEvents: events,\n      addNewEvent: addNewEvent,\n      openDayDetail: openDayDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(Calendar, \"Q+sA2CzbTvVVZxKSdxwDYGu1QDA=\", false, function () {\n  return [useDispatch];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","CalendarView","moment","CALENDAR_INITIAL_EVENTS","useDispatch","openRightDrawer","RIGHT_DRAWER_TYPES","showNotification","INITIAL_EVENTS","Calendar","dispatch","events","setEvents","addNewEvent","date","randomEvent","Math","floor","random","newEventObj","title","theme","startTime","startOf","endTime","endOf","message","status","openDayDetail","filteredEvents","header","bodyType","CALENDAR_EVENTS","extraObject"],"sources":["C:/Users/nrish/Rishi/Projects/Chess/Test/daisyui-admin-dashboard-template-master/src/features/calendar/index.js"],"sourcesContent":["import { useState } from 'react'\nimport CalendarView from '../../components/CalendarView'\nimport moment from 'moment'\nimport { CALENDAR_INITIAL_EVENTS } from '../../utils/dummyData'\nimport { useDispatch } from 'react-redux'\nimport { openRightDrawer } from '../common/rightDrawerSlice'\nimport { RIGHT_DRAWER_TYPES } from '../../utils/globalConstantUtil'\nimport { showNotification } from '../common/headerSlice'\n\n\n\nconst INITIAL_EVENTS = CALENDAR_INITIAL_EVENTS\n\nfunction Calendar(){\n\n    const dispatch = useDispatch()\n\n    const [events, setEvents] = useState(INITIAL_EVENTS)\n\n    // Add your own Add Event handler, like opening modal or random event addition\n    // Format - {title :\"\", theme: \"\", startTime : \"\", endTime : \"\"}, typescript version comming soon :)\n    const addNewEvent = (date) => {\n        let randomEvent = INITIAL_EVENTS[Math.floor(Math.random() * 10)]\n        let newEventObj = {title : randomEvent.title, theme : randomEvent.theme, startTime : moment(date).startOf('day'), endTime : moment(date).endOf('day')}\n        setEvents([...events, newEventObj])\n        dispatch(showNotification({message : \"New Event Added!\", status : 1}))\n    }\n\n    // Open all events of current day in sidebar \n    const openDayDetail = ({filteredEvents, title}) => {\n        dispatch(openRightDrawer({header : title, bodyType : RIGHT_DRAWER_TYPES.CALENDAR_EVENTS, extraObject : {filteredEvents}}))\n    }\n\n    return(\n        <>\n           <CalendarView \n                calendarEvents={events}\n                addNewEvent={addNewEvent}\n                openDayDetail={openDayDetail}\n           />\n        </>\n    )\n}\n\nexport default Calendar"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,uBAAuB,QAAQ,uBAAuB;AAC/D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,gBAAgB,QAAQ,uBAAuB;AAAA;AAAA;AAIxD,MAAMC,cAAc,GAAGL,uBAAuB;AAE9C,SAASM,QAAQ,GAAE;EAAA;EAEf,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAE9B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACQ,cAAc,CAAC;;EAEpD;EACA;EACA,MAAMK,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIC,WAAW,GAAGP,cAAc,CAACQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAChE,IAAIC,WAAW,GAAG;MAACC,KAAK,EAAGL,WAAW,CAACK,KAAK;MAAEC,KAAK,EAAGN,WAAW,CAACM,KAAK;MAAEC,SAAS,EAAGpB,MAAM,CAACY,IAAI,CAAC,CAACS,OAAO,CAAC,KAAK,CAAC;MAAEC,OAAO,EAAGtB,MAAM,CAACY,IAAI,CAAC,CAACW,KAAK,CAAC,KAAK;IAAC,CAAC;IACtJb,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEQ,WAAW,CAAC,CAAC;IACnCT,QAAQ,CAACH,gBAAgB,CAAC;MAACmB,OAAO,EAAG,kBAAkB;MAAEC,MAAM,EAAG;IAAC,CAAC,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,QAA6B;IAAA,IAA5B;MAACC,cAAc;MAAET;IAAK,CAAC;IAC1CV,QAAQ,CAACL,eAAe,CAAC;MAACyB,MAAM,EAAGV,KAAK;MAAEW,QAAQ,EAAGzB,kBAAkB,CAAC0B,eAAe;MAAEC,WAAW,EAAG;QAACJ;MAAc;IAAC,CAAC,CAAC,CAAC;EAC9H,CAAC;EAED,oBACI;IAAA,uBACG,QAAC,YAAY;MACR,cAAc,EAAElB,MAAO;MACvB,WAAW,EAAEE,WAAY;MACzB,aAAa,EAAEe;IAAc;MAAA;MAAA;MAAA;IAAA;EAChC,iBACF;AAEX;AAAC,GA7BQnB,QAAQ;EAAA,QAEIL,WAAW;AAAA;AAAA,KAFvBK,QAAQ;AA+BjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}